{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\Desktop\\\\BeJuRyu\\\\2023_1_WAT_BeJuRyu\\\\front\\\\src\\\\components\\\\Recommend\\\\PhotoUpload.jsx\",\n  _s = $RefreshSig$();\n/* createObjectURL, revokeObjectURL을 사용\r\n    동기적 실행, 주어진 객체를 가리키는 URL을 DOMString으로 변환\r\n    창을 닫을 때까지 유지됨. 이전에 해제하기 위해서는 메모리 누수 방지 위해서 revokeObjectURL()을 호출해야함.\r\n    FileLeader와 달리 시간이 필요하지 않고 revoke만 잘해주면 속도가 많이 빠르다고함\r\n    FileLeader와 readAsDataURL을 사용하는 방법과의 차이점에 대해 공부할 것\r\n    */\nimport { useEffect, useState } from \"react\";\nimport S from \"./styled\";\nimport { Button } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Uploader = () => {\n  _s();\n  const [image, setImage] = useState({\n    image_file: \"\",\n    preview_URL: \"img/default_image.png\"\n  });\n  let inputRef;\n  const saveImage = e => {\n    e.preventDefault();\n    if (e.target.files[0]) {\n      // 새로운 이미지를 올리면 createObjectURL()을 통해 생성한 기존 URL을 폐기\n      URL.revokeObjectURL(image.preview_URL);\n      const preview_URL = URL.createObjectURL(e.target.files[0]);\n      setImage(() => ({\n        image_file: e.target.files[0],\n        preview_URL: preview_URL\n      }));\n    }\n  };\n  const deleteImage = () => {\n    // createObjectURL()을 통해 생성한 기존 URL을 폐기\n    URL.revokeObjectURL(image.preview_URL);\n    setImage({\n      image_file: \"\",\n      preview_URL: \"img/default_image.png\"\n    });\n  };\n  useEffect(() => {\n    // 컴포넌트가 언마운트되면 createObjectURL()을 통해 생성한 기존 URL을 폐기\n    return () => {\n      URL.revokeObjectURL(image.preview_URL);\n    };\n  }, []);\n  const sendImageToServer = async () => {\n    if (image.image_file) {\n      const formData = new FormData();\n      formData.append(\"file\", image.image_file);\n      await axios.post(\"/api/image/upload\", formData);\n      alert(\"서버에 등록이 완료되었습니다!\");\n      setImage({\n        image_file: \"\",\n        preview_URL: \"img/default_image.png\"\n      });\n    } else {\n      alert(\"사진을 등록하세요!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploader-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: saveImage\n      // 클릭할 때 마다 file input의 value를 초기화 하지 않으면 버그가 발생할 수 있다\n      // 사진 등록을 두개 띄우고 첫번째에 사진을 올리고 지우고 두번째에 같은 사진을 올리면 그 값이 남아있음!\n      ,\n      onClick: e => e.target.value = null,\n      ref: refParam => inputRef = refParam,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.preview_URL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-button\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        variant: \"contained\",\n        onClick: () => inputRef.click(),\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        variant: \"contained\",\n        onClick: deleteImage,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        variant: \"contained\",\n        onClick: sendImageToServer,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Uploader, \"tFGaHw8EuKGpPvW5yXGnqeY5U6U=\");\n_c = Uploader;\nexport default Uploader;\nvar _c;\n$RefreshReg$(_c, \"Uploader\");","map":{"version":3,"names":["useEffect","useState","S","Button","axios","jsxDEV","_jsxDEV","Uploader","_s","image","setImage","image_file","preview_URL","inputRef","saveImage","e","preventDefault","target","files","URL","revokeObjectURL","createObjectURL","deleteImage","sendImageToServer","formData","FormData","append","post","alert","className","children","type","accept","onChange","onClick","value","ref","refParam","style","display","fileName","_jsxFileName","lineNumber","columnNumber","src","variant","click","color","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/src/components/Recommend/PhotoUpload.jsx"],"sourcesContent":["/* createObjectURL, revokeObjectURL을 사용\r\n    동기적 실행, 주어진 객체를 가리키는 URL을 DOMString으로 변환\r\n    창을 닫을 때까지 유지됨. 이전에 해제하기 위해서는 메모리 누수 방지 위해서 revokeObjectURL()을 호출해야함.\r\n    FileLeader와 달리 시간이 필요하지 않고 revoke만 잘해주면 속도가 많이 빠르다고함\r\n    FileLeader와 readAsDataURL을 사용하는 방법과의 차이점에 대해 공부할 것\r\n    */\r\nimport { useEffect, useState } from \"react\";\r\nimport S from \"./styled\";\r\nimport { Button } from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nconst Uploader = () => {\r\n  const [image, setImage] = useState({\r\n    image_file: \"\",\r\n    preview_URL: \"img/default_image.png\",\r\n  });\r\n\r\n  let inputRef;\r\n\r\n  const saveImage = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.files[0]) {\r\n      // 새로운 이미지를 올리면 createObjectURL()을 통해 생성한 기존 URL을 폐기\r\n      URL.revokeObjectURL(image.preview_URL);\r\n      const preview_URL = URL.createObjectURL(e.target.files[0]);\r\n      setImage(() => ({\r\n        image_file: e.target.files[0],\r\n        preview_URL: preview_URL,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const deleteImage = () => {\r\n    // createObjectURL()을 통해 생성한 기존 URL을 폐기\r\n    URL.revokeObjectURL(image.preview_URL);\r\n    setImage({\r\n      image_file: \"\",\r\n      preview_URL: \"img/default_image.png\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 컴포넌트가 언마운트되면 createObjectURL()을 통해 생성한 기존 URL을 폐기\r\n    return () => {\r\n      URL.revokeObjectURL(image.preview_URL);\r\n    };\r\n  }, []);\r\n\r\n  const sendImageToServer = async () => {\r\n    if (image.image_file) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", image.image_file);\r\n      await axios.post(\"/api/image/upload\", formData);\r\n      alert(\"서버에 등록이 완료되었습니다!\");\r\n      setImage({\r\n        image_file: \"\",\r\n        preview_URL: \"img/default_image.png\",\r\n      });\r\n    } else {\r\n      alert(\"사진을 등록하세요!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"uploader-wrapper\">\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={saveImage}\r\n        // 클릭할 때 마다 file input의 value를 초기화 하지 않으면 버그가 발생할 수 있다\r\n        // 사진 등록을 두개 띄우고 첫번째에 사진을 올리고 지우고 두번째에 같은 사진을 올리면 그 값이 남아있음!\r\n        onClick={(e) => (e.target.value = null)}\r\n        ref={(refParam) => (inputRef = refParam)}\r\n        style={{ display: \"none\" }}\r\n      />\r\n      <div className=\"img-wrapper\">\r\n        <img src={image.preview_URL} />\r\n      </div>\r\n\r\n      <div className=\"upload-button\">\r\n        <Button\r\n          type=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={() => inputRef.click()}\r\n        >\r\n          Preview\r\n        </Button>\r\n        <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\r\n          Delete\r\n        </Button>\r\n        <Button color=\"success\" variant=\"contained\" onClick={sendImageToServer}>\r\n          Upload\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploader;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}