{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/* TODO\r\n1. 거의 완료\r\n2. [X] 이미지 첨부 후 서버와 통신할 때 json로 넘기는 방법 찾아볼 것.(facial-expression: string => base64 인코딩\r\n3. [X] 현재 줄글 작성 부분과 이미지 들어가는 게 따로 구현되있는데, 서버 넘길때 한 번에 넘겨야되므로 코드 합침 필요\r\n  => formData*/import S from\"./styled\";import{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import PhotoUpload from\"./PhotoUpload\";import authClient from\"../../apis/authClient\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Recommend(){var navigate=useNavigate();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),jwtToken=_useState2[0],setJwtToken=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),imagePreview=_useState4[0],setImagePreview=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),selectedFile=_useState6[0],setSelectedFile=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),inputValue=_useState8[0],setInputValue=_useState8[1];// 텍스트 입력값 상태 추가\nvar currentDate=getCurrentDateTime();// 현재 시각 가져오기\nvar handleFormSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e){var reader;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:e.preventDefault();navigate(\"/result\");if(selectedFile){reader=new FileReader();// base64 encoding해서\nreader.onloadend=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var base64Data,res,err;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:// const arrayBuffer = reader.result;\n// const byteArray = new Uint8Array(arrayBuffer);\nbase64Data=String(reader.result.split(\",\")[1]);_context.prev=1;_context.next=4;return authClient({method:\"post\",url:\"/analyze/sources\",data:{date:currentDate,facialExpression:base64Data,textExpression:inputValue},headers:{\"Content-Type\":\"text/plain\"}});case 4:res=_context.sent;if(res){console.log(res.data);}// 서버 응답 처리\n_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);if(_context.t0.response){// 서버 응답 에러\nerr=_context.t0.response.data;console.log(err);console.log(_context.t0.message);}case 11:case\"end\":return _context.stop();}},_callee,null,[[1,8]]);}));reader.readAsDataURL(selectedFile);// const userId = localStorage.getItem(\"user-id\");\n// console.log(typeof parseInt(userId, 10));\n}else{console.log(\"엄ㅅ므\");}case 3:case\"end\":return _context2.stop();}},_callee2);}));return function handleFormSubmit(_x){return _ref.apply(this,arguments);};}();var handleInputChange=function handleInputChange(e){setInputValue(e.target.value);};var handleFileChange=function handleFileChange(file){setSelectedFile(file);//setInputValue(e.target.value);\n};return/*#__PURE__*/_jsx(S.Container,{children:/*#__PURE__*/_jsxs(S.Wrapper,{children:[/*#__PURE__*/_jsx(S.Title,{children:\"\\uC8FC\\uB958 \\uCD94\\uCC9C\\uC744 \\uBC1B\\uAE30 \\uC704\\uD574\\uC11C \\uD544\\uC694\\uD55C \\uC815\\uBCF4\\uB97C \\uC54C\\uB824\\uC8FC\\uC138\\uC694!\"}),/*#__PURE__*/_jsxs(S.WhiteBox,{children:[/*#__PURE__*/_jsx(S.textInput,{value:inputValue,onChange:handleInputChange}),inputValue===\"\"&&/*#__PURE__*/_jsx(S.MyState,{children:\"\\uAE30\\uBD84\\uC774 \\uC5B4\\uB5A0\\uC2E0\\uAC00\\uC694? \\uAC10\\uC815\\uC774 \\uD45C\\uD604\\uB418\\uB294 \\uC5B8\\uC5B4\\uAC00 \\uB4E4\\uC5B4\\uAC00\\uC788\\uC73C\\uBA74 \\uC88B\\uC544\\uC694!\"})]}),/*#__PURE__*/_jsx(PhotoUpload,{setSelectedFile:handleFileChange,setImagePreview:setImagePreview,imagePreview:imagePreview}),/*#__PURE__*/_jsx(S.SubmitButton,{onClick:handleFormSubmit,children:\"\\uBD84\\uC11D \\uC2DC\\uC791\"})]})});}// 현재 날짜와 시각을 \"yyyy.MM.dd HH:mm\" 형식으로 반환하는 함수\nfunction getCurrentDateTime(){var date=new Date();var year=date.getFullYear();var month=String(date.getMonth()+1).padStart(2,\"0\");var day=String(date.getDate()).padStart(2,\"0\");var hours=String(date.getHours()).padStart(2,\"0\");var minutes=String(date.getMinutes()).padStart(2,\"0\");var formattedDateTime=\"\".concat(year,\"-\").concat(month,\"-\").concat(day,\" \").concat(hours,\":\").concat(minutes);return formattedDateTime;}export default Recommend;","map":{"version":3,"names":["S","useState","useNavigate","PhotoUpload","authClient","jsx","_jsx","jsxs","_jsxs","Recommend","navigate","_useState","_useState2","_slicedToArray","jwtToken","setJwtToken","_useState3","_useState4","imagePreview","setImagePreview","_useState5","_useState6","selectedFile","setSelectedFile","_useState7","_useState8","inputValue","setInputValue","currentDate","getCurrentDateTime","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","e","reader","wrap","_callee2$","_context2","prev","next","preventDefault","FileReader","onloadend","_callee","base64Data","res","err","_callee$","_context","String","result","split","method","url","data","date","facialExpression","textExpression","headers","sent","console","log","t0","response","message","stop","readAsDataURL","_x","apply","arguments","handleInputChange","target","value","handleFileChange","file","Container","children","Wrapper","Title","WhiteBox","textInput","onChange","MyState","SubmitButton","onClick","Date","year","getFullYear","month","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","formattedDateTime","concat"],"sources":["C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/src/components/Recommend/Recommend.jsx"],"sourcesContent":["/* TODO\r\n1. 거의 완료\r\n2. [X] 이미지 첨부 후 서버와 통신할 때 json로 넘기는 방법 찾아볼 것.(facial-expression: string => base64 인코딩\r\n3. [X] 현재 줄글 작성 부분과 이미지 들어가는 게 따로 구현되있는데, 서버 넘길때 한 번에 넘겨야되므로 코드 합침 필요\r\n  => formData*/\r\nimport S from \"./styled\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PhotoUpload from \"./PhotoUpload\";\r\nimport authClient from \"../../apis/authClient\";\r\n\r\nfunction Recommend() {\r\n  const navigate = useNavigate();\r\n  const [jwtToken, setJwtToken] = useState(\"\");\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [inputValue, setInputValue] = useState(\"\"); // 텍스트 입력값 상태 추가\r\n\r\n  const currentDate = getCurrentDateTime(); // 현재 시각 가져오기\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    navigate(\"/result\");\r\n    if (selectedFile) {\r\n      const reader = new FileReader();\r\n      // base64 encoding해서\r\n      reader.onloadend = async () => {\r\n        // const arrayBuffer = reader.result;\r\n        // const byteArray = new Uint8Array(arrayBuffer);\r\n\r\n        const base64Data = String(reader.result.split(\",\")[1]);\r\n\r\n        try {\r\n          const res = await authClient({\r\n            method: \"post\",\r\n            url: \"/analyze/sources\",\r\n\r\n            data: {\r\n              date: currentDate,\r\n              facialExpression: base64Data,\r\n              textExpression: inputValue,\r\n            },\r\n            headers: {\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          });\r\n          if (res) {\r\n            console.log(res.data);\r\n          }\r\n          // 서버 응답 처리\r\n        } catch (error) {\r\n          if (error.response) {\r\n            // 서버 응답 에러\r\n            const err = error.response.data;\r\n            console.log(err);\r\n            console.log(error.message);\r\n          }\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(selectedFile);\r\n      // const userId = localStorage.getItem(\"user-id\");\r\n      // console.log(typeof parseInt(userId, 10));\r\n    } else {\r\n      console.log(\"엄ㅅ므\");\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleFileChange = (file) => {\r\n    setSelectedFile(file);\r\n    //setInputValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.Wrapper>\r\n        <S.Title>주류 추천을 받기 위해서 필요한 정보를 알려주세요!</S.Title>\r\n        <S.WhiteBox>\r\n          <S.textInput value={inputValue} onChange={handleInputChange} />\r\n          {inputValue === \"\" && (\r\n            <S.MyState>\r\n              기분이 어떠신가요? 감정이 표현되는 언어가 들어가있으면 좋아요!\r\n            </S.MyState>\r\n          )}\r\n        </S.WhiteBox>\r\n        <PhotoUpload\r\n          setSelectedFile={handleFileChange}\r\n          setImagePreview={setImagePreview}\r\n          imagePreview={imagePreview}\r\n        />\r\n\r\n        <S.SubmitButton onClick={handleFormSubmit}>분석 시작</S.SubmitButton>\r\n      </S.Wrapper>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\n// 현재 날짜와 시각을 \"yyyy.MM.dd HH:mm\" 형식으로 반환하는 함수\r\nfunction getCurrentDateTime() {\r\n  const date = new Date();\r\n\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  const hours = String(date.getHours()).padStart(2, \"0\");\r\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n\r\n  const formattedDateTime = `${year}-${month}-${day} ${hours}:${minutes}`;\r\n\r\n  return formattedDateTime;\r\n}\r\n\r\nexport default Recommend;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}