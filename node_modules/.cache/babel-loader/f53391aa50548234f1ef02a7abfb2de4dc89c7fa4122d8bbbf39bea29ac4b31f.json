{"ast":null,"code":"import _slicedToArray from\"C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import styled from\"styled-components\";import{useEffect,useState}from\"react\";import logo from\"../image/logo2.png\";import{Link}from\"react-router-dom\";// 사용자 닉네임 불러올 떄\nimport{useSelector,useDispatch}from\"react-redux\";import noAuthClient from\"../apis/noAuthClient\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Navbar=styled.nav(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  background-color: #9932cc;\\n  padding: 0.5rem;\\n  @media only screen and (max-width: 768px) {\\n    flex-direction: column;\\n    align-items: flex-start;\\n    padding: 8px 24px;\\n  }\\n  font-size: 2rem;\\n\"])));var Navbarlogo=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  font-size: 36px;\\n  justify-content: space-between;\\n  color: white;\\n  display: flex;\\n  align-items: center;\\n  i {\\n    color: orange;\\n  }\\n  @media only screen and (max-width: 768px) {\\n    flex-direction: column;\\n    align-items: flex-start;\\n  }\\n\"])));var NavbarlogoImage=styled.img(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  height: 50px;\\n  margin-right: 10px;\\n\"])));var Navbarmenu=styled.ul(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  list-style: none;\\n  padding-left: 0;\\n  font-size: 16px;\\n  justify-content: center;\\n  li {\\n    padding: 12px 24px;\\n    color: white; /* \\uAE00\\uC528 \\uC0C9\\uC0C1 \\uBCC0\\uACBD */\\n    font-family: \\\"BejuryuFont\\\", Arial, Helvetica, sans-serif; /* \\uAE00\\uC528\\uCCB4 \\uBCC0\\uACBD */\\n  }\\n  li:hover {\\n    background-color: #e11299;\\n  }\\n\\n  @media only screen and (max-width: 576px) {\\n    //width: 100%;\\n    flex-direction: column;\\n    align-items: center;\\n    width: 100%;\\n\\n    li {\\n      width: 100%;\\n      text-align: center;\\n    }\\n  }\\n\"])));var Navbarlink=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  @media only screen and (max-width: 768px) {\\n    margin: 0 auto;\\n  }\\n  > li {\\n    list-style: none;\\n  }\\n\"])));var CustomLink=styled(Link)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  text-decoration: none;\\n  color: inherit;\\n  font-family: \\\"BejuryuFont\\\";\\n\"])));var CustomNavbarlink=styled(Navbarlink)(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  li {\\n    color: white;\\n    font-size: 18px;\\n    font-family: \\\"BejuryuFont\\\";\\n  }\\n\"])));export default function Header(){var nickname=localStorage.getItem(\"nickname\");var userName=useSelector(function(state){return state.name.name;});var dispatch=useDispatch();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),dictionaryData=_useState2[0],setDictionaryData=_useState2[1];// const handleDictionaryButtonClick = async () => {\n//   try {\n//     const response = await noAuthClient({\n//       method: \"get\",\n//       url: \"/drinks\",\n//     });\n//     if (response.status === 200) {\n//       const data = response.data;\n//       // setDictionaryData(data); // 데이터를 상태에 저장\n//       //localStorage.setItem(\"data\", data.drinks);\n//       console.log(data);\n//       //dispatch({ type: \"SET_DICTIONARY_DATA\", payload: data }); // 가져온 데이터를 Redux 스토어에 저장\n//       console.log(\"데이터를 가져왔습니다.\");\n//     } else {\n//       console.log(\"데이터를 가져오는데 실패하였습니다.\");\n//     }\n//   } catch (error) {\n//     console.log(\"오류가 발생하였습니다.\", error);\n//   }\n// };\n// useEffect(() => {\n//   const dictionaryButton = document.querySelector('li a[href=\"/Dictionary\"]');\n//   if (dictionaryButton) {\n//     dictionaryButton.addEventListener(\"click\", handleDictionaryButtonClick);\n//   }\n//   return () => {\n//     if (dictionaryButton) {\n//       dictionaryButton.removeEventListener(\n//         \"click\",\n//         handleDictionaryButtonClick\n//       );\n//     }\n//   };\n// }, []);\n// const dictionaryData = useSelector((state) => state.dictionaryData); // Redux 스토어에서 필요한 데이터 선택\n//console.log(dictionaryData); // 데이터 콘솔 출력\n// return () => {\n//   if (dictionaryButton) {\n//     dictionaryButton.removeEventListener(\n//       \"click\",\n//       handleDictionaryButtonClick\n//     );\n//   }\n// };\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Navbar,{children:[/*#__PURE__*/_jsxs(Navbarlogo,{children:[/*#__PURE__*/_jsx(NavbarlogoImage,{src:logo,alt:\"BeJuRyu Logo\"}),/*#__PURE__*/_jsx(CustomLink// to=\"/MyPage\"\n,{style:{textDecoration:\"none\",color:\"inherit\"},children:\"BeJuRyu\"})]}),userName===\"\"?\"\":/*#__PURE__*/_jsxs(Navbarmenu,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:{pathname:\"/Dictionary\",state:{dictionaryData:dictionaryData}// 데이터를 props로 전달\n},style:{textDecoration:\"none\",color:\"inherit\"},children:\"\\uC8FC\\uB958\\uC0AC\\uC804\\uBA54\\uB274\"})})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/Recommend\",style:{textDecoration:\"none\",color:\"inherit\"},children:\"\\uC8FC\\uB958\\uCD94\\uCC9C\\uBA54\\uB274\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/MyPage\",style:{textDecoration:\"none\",color:\"inherit\"},children:\"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"})})]}),userName===\"\"?/*#__PURE__*/_jsx(Navbarlink,{children:/*#__PURE__*/_jsx(\"div\",{})}):/*#__PURE__*/_jsx(CustomNavbarlink,{children:/*#__PURE__*/_jsxs(\"li\",{children:[nickname,\" \\uB2D8\"]})})]})});}","map":{"version":3,"names":["styled","useEffect","useState","logo","Link","useSelector","useDispatch","noAuthClient","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Navbar","nav","_templateObject","_taggedTemplateLiteral","Navbarlogo","div","_templateObject2","NavbarlogoImage","img","_templateObject3","Navbarmenu","ul","_templateObject4","Navbarlink","_templateObject5","CustomLink","_templateObject6","CustomNavbarlink","_templateObject7","Header","nickname","localStorage","getItem","userName","state","name","dispatch","_useState","_useState2","_slicedToArray","dictionaryData","setDictionaryData","children","src","alt","style","textDecoration","color","to","pathname"],"sources":["C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/src/components/Header.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { useEffect, useState } from \"react\";\r\nimport logo from \"../image/logo2.png\";\r\nimport { Link } from \"react-router-dom\";\r\n// 사용자 닉네임 불러올 떄\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport noAuthClient from \"../apis/noAuthClient\";\r\n\r\nconst Navbar = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: #9932cc;\r\n  padding: 0.5rem;\r\n  @media only screen and (max-width: 768px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    padding: 8px 24px;\r\n  }\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst Navbarlogo = styled.div`\r\n  font-size: 36px;\r\n  justify-content: space-between;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  i {\r\n    color: orange;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nconst NavbarlogoImage = styled.img`\r\n  height: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Navbarmenu = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n  padding-left: 0;\r\n  font-size: 16px;\r\n  justify-content: center;\r\n  li {\r\n    padding: 12px 24px;\r\n    color: white; /* 글씨 색상 변경 */\r\n    font-family: \"BejuryuFont\", Arial, Helvetica, sans-serif; /* 글씨체 변경 */\r\n  }\r\n  li:hover {\r\n    background-color: #e11299;\r\n  }\r\n\r\n  @media only screen and (max-width: 576px) {\r\n    //width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n\r\n    li {\r\n      width: 100%;\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Navbarlink = styled.div`\r\n  @media only screen and (max-width: 768px) {\r\n    margin: 0 auto;\r\n  }\r\n  > li {\r\n    list-style: none;\r\n  }\r\n`;\r\n\r\nconst CustomLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n  font-family: \"BejuryuFont\";\r\n`;\r\n\r\nconst CustomNavbarlink = styled(Navbarlink)`\r\n  li {\r\n    color: white;\r\n    font-size: 18px;\r\n    font-family: \"BejuryuFont\";\r\n  }\r\n`;\r\n\r\nexport default function Header() {\r\n  const nickname = localStorage.getItem(\"nickname\");\r\n  const userName = useSelector((state) => state.name.name);\r\n  const dispatch = useDispatch();\r\n  const [dictionaryData, setDictionaryData] = useState(null);\r\n\r\n  // const handleDictionaryButtonClick = async () => {\r\n  //   try {\r\n  //     const response = await noAuthClient({\r\n  //       method: \"get\",\r\n  //       url: \"/drinks\",\r\n  //     });\r\n  //     if (response.status === 200) {\r\n  //       const data = response.data;\r\n  //       // setDictionaryData(data); // 데이터를 상태에 저장\r\n  //       //localStorage.setItem(\"data\", data.drinks);\r\n  //       console.log(data);\r\n  //       //dispatch({ type: \"SET_DICTIONARY_DATA\", payload: data }); // 가져온 데이터를 Redux 스토어에 저장\r\n  //       console.log(\"데이터를 가져왔습니다.\");\r\n  //     } else {\r\n  //       console.log(\"데이터를 가져오는데 실패하였습니다.\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.log(\"오류가 발생하였습니다.\", error);\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   const dictionaryButton = document.querySelector('li a[href=\"/Dictionary\"]');\r\n  //   if (dictionaryButton) {\r\n  //     dictionaryButton.addEventListener(\"click\", handleDictionaryButtonClick);\r\n  //   }\r\n\r\n  //   return () => {\r\n  //     if (dictionaryButton) {\r\n  //       dictionaryButton.removeEventListener(\r\n  //         \"click\",\r\n  //         handleDictionaryButtonClick\r\n  //       );\r\n  //     }\r\n  //   };\r\n  // }, []);\r\n\r\n  // const dictionaryData = useSelector((state) => state.dictionaryData); // Redux 스토어에서 필요한 데이터 선택\r\n  //console.log(dictionaryData); // 데이터 콘솔 출력\r\n\r\n  // return () => {\r\n  //   if (dictionaryButton) {\r\n  //     dictionaryButton.removeEventListener(\r\n  //       \"click\",\r\n  //       handleDictionaryButtonClick\r\n  //     );\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Navbar>\r\n        <Navbarlogo>\r\n          <NavbarlogoImage src={logo} alt=\"BeJuRyu Logo\" />\r\n          <CustomLink\r\n            // to=\"/MyPage\"\r\n            style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n          >\r\n            BeJuRyu\r\n          </CustomLink>\r\n        </Navbarlogo>\r\n        {userName === \"\" ? (\r\n          \"\"\r\n        ) : (\r\n          <Navbarmenu>\r\n            <div>\r\n              <li>\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/Dictionary\",\r\n                    state: { dictionaryData: dictionaryData }, // 데이터를 props로 전달\r\n                  }}\r\n                  style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                >\r\n                  주류사전메뉴\r\n                </Link>\r\n              </li>\r\n            </div>\r\n            <li>\r\n              <Link\r\n                to=\"/Recommend\"\r\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n              >\r\n                주류추천메뉴\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link\r\n                to=\"/MyPage\"\r\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n              >\r\n                마이페이지\r\n              </Link>\r\n            </li>\r\n          </Navbarmenu>\r\n        )}\r\n        {userName === \"\" ? (\r\n          <Navbarlink>\r\n            <div></div>\r\n          </Navbarlink>\r\n        ) : (\r\n          <CustomNavbarlink>\r\n            <li>{nickname} 님</li>\r\n          </CustomNavbarlink>\r\n        )}\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}