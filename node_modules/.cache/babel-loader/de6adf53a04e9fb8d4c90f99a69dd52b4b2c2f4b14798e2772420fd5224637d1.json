{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\Desktop\\\\BeJuRyu\\\\2023_1_WAT_BeJuRyu\\\\front\\\\src\\\\components\\\\MyPage\\\\Logout.jsx\",\n  _s = $RefreshSig$();\n/*TODO\r\n  1. 카카오 로그아웃시 쿠키 clear 추가 (자사 서비스 로그아웃은 됨)*/\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport s from \"./styled\";\nimport { useDispatch } from \"react-redux\";\nimport { GET_NAME } from \"../../reducer/nameSlice\";\nimport settingCookie from \"../../utils/settingCookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Kakao\n} = window;\nfunction Logout() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate;\n  const [isLogin, setIsLogin] = useState(false);\n  function deleteCookie() {\n    document.cookie = \"authorize-access-token=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n  }\n\n  // logout 로컬 구현\n  const logout = () => {\n    settingCookie(\"remove\");\n    dispatch(GET_NAME(\"\"));\n    navigate(\"/\");\n    localStorage.clear();\n  };\n  const logoutWithKakao = async () => {\n    // Kakao.API.request({\n    //   url: \"/v1/user/unlink\",\n    // })\n    //   .then(function (response) {\n    //     alert(response);\n    //   })\n    //   .catch(function (error) {\n    //     alert(error);\n    //   });\n    logout();\n    Kakao.Auth.logout().then(function () {\n      alert(\"logout ok\\naccess token -> \" + Kakao.Auth.getAccessToken());\n      deleteCookie();\n      setIsLogin(false);\n      localStorage.clear();\n    }).catch(function () {\n      alert(\"Not logged in\");\n    });\n    // if (Kakao.Auth.getAccessToken()) {\n    //   console.log(\n    //     \"카카오 인증 액세스 토큰이 존재합니다.\",\n    //     Kakao.Auth.getAccessToken()\n    //   );\n    //   try {\n    //     await Kakao.Auth.logout();\n    //     alert(\"로그아웃 되었습니다.\", Kakao.Auth.getAccessToken());\n    //     setIsLogin(false);\n    //     localStorage.clear();\n\n    //     window.location.href = \"/\";\n    //     //navigate(\"/\");\n    //     Kakao.Auth.setAccessToken(null); // 카카오 SDK의 자동 로그인 초기화\n\n    //     // 카카오 API에서 사용하는 쿠키 삭제\n    //     const kakaoCookies = [\n    //       \"_kahai\",\n    //       \"_karmt\",\n    //       \"_karmtea\",\n    //       \"_kawlt\",\n    //       \"_kawltea\",\n    //     ];\n    //     kakaoCookies.forEach((cookie) => {\n    //       document.cookie =\n    //         cookie + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    //     });\n\n    //     logout(); // 비주류 서비스 로그아웃\n    //   } catch (error) {\n    //     alert(error);\n    //   }\n    // }\n  };\n\n  useEffect(() => {\n    if (Kakao.Auth.getAccessToken()) {\n      setIsLogin(false);\n    }\n  }, []);\n  const logoutView = /*#__PURE__*/_jsxDEV(s.LogoutButton, {\n    onClick: logoutWithKakao,\n    children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Logout\",\n    children: logoutView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 10\n  }, this);\n}\n_s(Logout, \"InrQOLLa7Zvw8dfPWCoQbzen850=\", false, function () {\n  return [useDispatch];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["useEffect","useState","useNavigate","s","useDispatch","GET_NAME","settingCookie","jsxDEV","_jsxDEV","Kakao","window","Logout","_s","dispatch","navigate","isLogin","setIsLogin","deleteCookie","document","cookie","logout","localStorage","clear","logoutWithKakao","Auth","then","alert","getAccessToken","catch","logoutView","LogoutButton","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/src/components/MyPage/Logout.jsx"],"sourcesContent":["/*TODO\r\n  1. 카카오 로그아웃시 쿠키 clear 추가 (자사 서비스 로그아웃은 됨)*/\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport s from \"./styled\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { GET_NAME } from \"../../reducer/nameSlice\";\r\nimport settingCookie from \"../../utils/settingCookie\";\r\nconst { Kakao } = window;\r\n\r\nfunction Logout() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate;\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  function deleteCookie() {\r\n    document.cookie =\r\n      \"authorize-access-token=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n  }\r\n\r\n  // logout 로컬 구현\r\n  const logout = () => {\r\n    settingCookie(\"remove\");\r\n    dispatch(GET_NAME(\"\"));\r\n    navigate(\"/\");\r\n    localStorage.clear();\r\n  };\r\n\r\n  const logoutWithKakao = async () => {\r\n    // Kakao.API.request({\r\n    //   url: \"/v1/user/unlink\",\r\n    // })\r\n    //   .then(function (response) {\r\n    //     alert(response);\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     alert(error);\r\n    //   });\r\n    logout();\r\n    Kakao.Auth.logout()\r\n      .then(function () {\r\n        alert(\"logout ok\\naccess token -> \" + Kakao.Auth.getAccessToken());\r\n        deleteCookie();\r\n        setIsLogin(false);\r\n        localStorage.clear();\r\n      })\r\n      .catch(function () {\r\n        alert(\"Not logged in\");\r\n      });\r\n    // if (Kakao.Auth.getAccessToken()) {\r\n    //   console.log(\r\n    //     \"카카오 인증 액세스 토큰이 존재합니다.\",\r\n    //     Kakao.Auth.getAccessToken()\r\n    //   );\r\n    //   try {\r\n    //     await Kakao.Auth.logout();\r\n    //     alert(\"로그아웃 되었습니다.\", Kakao.Auth.getAccessToken());\r\n    //     setIsLogin(false);\r\n    //     localStorage.clear();\r\n\r\n    //     window.location.href = \"/\";\r\n    //     //navigate(\"/\");\r\n    //     Kakao.Auth.setAccessToken(null); // 카카오 SDK의 자동 로그인 초기화\r\n\r\n    //     // 카카오 API에서 사용하는 쿠키 삭제\r\n    //     const kakaoCookies = [\r\n    //       \"_kahai\",\r\n    //       \"_karmt\",\r\n    //       \"_karmtea\",\r\n    //       \"_kawlt\",\r\n    //       \"_kawltea\",\r\n    //     ];\r\n    //     kakaoCookies.forEach((cookie) => {\r\n    //       document.cookie =\r\n    //         cookie + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n    //     });\r\n\r\n    //     logout(); // 비주류 서비스 로그아웃\r\n    //   } catch (error) {\r\n    //     alert(error);\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Kakao.Auth.getAccessToken()) {\r\n      setIsLogin(false);\r\n    }\r\n  }, []);\r\n\r\n  const logoutView = (\r\n    <s.LogoutButton onClick={logoutWithKakao}>로그아웃</s.LogoutButton>\r\n  );\r\n\r\n  return <div className=\"Logout\">{logoutView}</div>;\r\n}\r\n\r\nexport default Logout;\r\n"],"mappings":";;AAAA;AACA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,CAAC,MAAM,UAAU;AACxB,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtD,MAAM;EAAEC;AAAM,CAAC,GAAGC,MAAM;AAExB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAMU,QAAQ,GAAGZ,WAAW;EAC5B,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7C,SAASgB,YAAYA,CAAA,EAAG;IACtBC,QAAQ,CAACC,MAAM,GACb,yEAAyE;EAC7E;;EAEA;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBd,aAAa,CAAC,QAAQ,CAAC;IACvBO,QAAQ,CAACR,QAAQ,CAAC,EAAE,CAAC,CAAC;IACtBS,QAAQ,CAAC,GAAG,CAAC;IACbO,YAAY,CAACC,KAAK,EAAE;EACtB,CAAC;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAH,MAAM,EAAE;IACRX,KAAK,CAACe,IAAI,CAACJ,MAAM,EAAE,CAChBK,IAAI,CAAC,YAAY;MAChBC,KAAK,CAAC,6BAA6B,GAAGjB,KAAK,CAACe,IAAI,CAACG,cAAc,EAAE,CAAC;MAClEV,YAAY,EAAE;MACdD,UAAU,CAAC,KAAK,CAAC;MACjBK,YAAY,CAACC,KAAK,EAAE;IACtB,CAAC,CAAC,CACDM,KAAK,CAAC,YAAY;MACjBF,KAAK,CAAC,eAAe,CAAC;IACxB,CAAC,CAAC;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED1B,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,CAACe,IAAI,CAACG,cAAc,EAAE,EAAE;MAC/BX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,UAAU,gBACdrB,OAAA,CAACL,CAAC,CAAC2B,YAAY;IAACC,OAAO,EAAER,eAAgB;IAAAS,QAAA,EAAC;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC/C;EAED,oBAAO5B,OAAA;IAAK6B,SAAS,EAAC,QAAQ;IAAAL,QAAA,EAAEH;EAAU;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AACnD;AAACxB,EAAA,CArFQD,MAAM;EAAA,QACIP,WAAW;AAAA;AAAAkC,EAAA,GADrB3B,MAAM;AAuFf,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}