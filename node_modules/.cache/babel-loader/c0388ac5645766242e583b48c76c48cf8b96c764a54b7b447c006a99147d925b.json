{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/* TODO\r\n1. [o] 주류 히스토리 페이지 대략적으로 어떻게 구현할 건지 UI*/ // 리스트 형식으로 들어가고 onclick 시키게끔 깔끔하게 고\nimport S from\"./styled\";import{useNavigate,useLocation}from\"react-router-dom\";import{useState,useEffect}from\"react\";import{useDispatch}from\"react-redux\";import authClient from\"../../apis/authClient\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function History(){var navigate=useNavigate();var location=useLocation();// 추천결과 리스트\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),recommendList=_useState2[0],setRecommendList=_useState2[1];// 리스트 길이에 따라 pagination\nvar _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),page=_useState4[0],setPage=_useState4[1];var _useState5=useState(9),_useState6=_slicedToArray(_useState5,2),perPage=_useState6[0],setPerPage=_useState6[1];var totalPages=Math.ceil(recommendList.length/perPage);// 현재 페이지에 해당하는 항목들만 추출하는 함수\nvar getCurrentPageItems=function getCurrentPageItems(){var startIndex=(page-1)*perPage;var endIndex=startIndex+perPage;return recommendList.slice(startIndex,endIndex);};// 다음 페이지로 이동하는 함수\nvar goToNextPage=function goToNextPage(){if(page<totalPages){setPage(page+1);}};// 이전 페이지로 이동하는 함수\nvar goToPreviousPage=function goToPreviousPage(){if(page>1){setPage(page-1);}};useEffect(function(){var reviewList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,sortedList,err;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return authClient({method:\"get\",url:\"/analyze\"});case 3:response=_context.sent;// 최신순으로 정렬하기 위함.\nsortedList=response.data.sort(function(a,b){return b.id-a.id;});setRecommendList(sortedList);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);if(_context.t0.response){err=_context.t0.response.data;//console.log(err);\n}case 11:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function reviewList(){return _ref.apply(this,arguments);};}();reviewList();},[]);var handleListClick=function handleListClick(id){navigate(\"/historyInfo\",{state:{id:id}});};var goMypage=function goMypage(){navigate(\"/mypage\");};// 리스트의 각 요소를 눌렸을 때 해당 페이지로 이동 시킨다.\nvar HistoryView=/*#__PURE__*/_jsx(S.Container,{children:/*#__PURE__*/_jsxs(S.Wrapper,{children:[/*#__PURE__*/_jsx(S.Title,{children:\"\\uD604\\uC7AC\\uAE4C\\uC9C0 \\uC774\\uC6A9\\uAE30\\uB85D\\uC785\\uB2C8\\uB2E4\"}),/*#__PURE__*/_jsxs(S.WhiteBox,{children:[getCurrentPageItems().map(function(item){return/*#__PURE__*/_jsxs(S.listStyle,{onClick:function onClick(){return handleListClick(item.id);},children:[item.date,\" \",item.id]},item.id);}),/*#__PURE__*/_jsxs(S.ButtonContainer,{children:[/*#__PURE__*/_jsx(S.PageButton,{onClick:goToPreviousPage,disabled:page===1,children:\"\\uC774\\uC804 \\uD398\\uC774\\uC9C0\"}),/*#__PURE__*/_jsxs(S.PageInfo,{children:[\"\\uD398\\uC774\\uC9C0 \",page,\" / \",totalPages]}),/*#__PURE__*/_jsx(S.PageButton,{onClick:goToNextPage,disabled:page===totalPages,children:\"\\uB2E4\\uC74C \\uD398\\uC774\\uC9C0\"})]})]}),/*#__PURE__*/_jsx(S.ReButton,{onClick:goMypage,children:\"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"})]})});return HistoryView;}export default History;","map":{"version":3,"names":["S","useNavigate","useLocation","useState","useEffect","useDispatch","authClient","jsx","_jsx","jsxs","_jsxs","History","navigate","location","_useState","_useState2","_slicedToArray","recommendList","setRecommendList","_useState3","_useState4","page","setPage","_useState5","_useState6","perPage","setPerPage","totalPages","Math","ceil","length","getCurrentPageItems","startIndex","endIndex","slice","goToNextPage","goToPreviousPage","reviewList","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","sortedList","err","wrap","_callee$","_context","prev","next","method","url","sent","data","sort","a","b","id","t0","stop","apply","arguments","handleListClick","state","goMypage","HistoryView","Container","children","Wrapper","Title","WhiteBox","map","item","listStyle","onClick","date","ButtonContainer","PageButton","disabled","PageInfo","ReButton"],"sources":["C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/src/components/History/History.jsx"],"sourcesContent":["/* TODO\r\n1. [o] 주류 히스토리 페이지 대략적으로 어떻게 구현할 건지 UI*/\r\n\r\n// 리스트 형식으로 들어가고 onclick 시키게끔 깔끔하게 고\r\nimport S from \"./styled\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport authClient from \"../../apis/authClient\";\r\n\r\nfunction History() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // 추천결과 리스트\r\n  const [recommendList, setRecommendList] = useState([]);\r\n  // 리스트 길이에 따라 pagination\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerPage] = useState(9);\r\n  const totalPages = Math.ceil(recommendList.length / perPage);\r\n\r\n  // 현재 페이지에 해당하는 항목들만 추출하는 함수\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (page - 1) * perPage;\r\n    const endIndex = startIndex + perPage;\r\n    return recommendList.slice(startIndex, endIndex);\r\n  };\r\n\r\n  // 다음 페이지로 이동하는 함수\r\n  const goToNextPage = () => {\r\n    if (page < totalPages) {\r\n      setPage(page + 1);\r\n    }\r\n  };\r\n\r\n  // 이전 페이지로 이동하는 함수\r\n  const goToPreviousPage = () => {\r\n    if (page > 1) {\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const reviewList = async () => {\r\n      try {\r\n        const response = await authClient({\r\n          method: \"get\",\r\n          url: \"/analyze\",\r\n        });\r\n        // 최신순으로 정렬하기 위함.\r\n        const sortedList = response.data.sort((a, b) => b.id - a.id);\r\n        setRecommendList(sortedList);\r\n      } catch (error) {\r\n        if (error.response) {\r\n          const err = error.response.data;\r\n          //console.log(err);\r\n        }\r\n      }\r\n    };\r\n    reviewList();\r\n  }, []);\r\n\r\n  const handleListClick = (id) => {\r\n    navigate(\"/historyInfo\", { state: { id } });\r\n  };\r\n\r\n  const goMypage = () => {\r\n    navigate(\"/mypage\");\r\n  };\r\n\r\n  // 리스트의 각 요소를 눌렸을 때 해당 페이지로 이동 시킨다.\r\n\r\n  const HistoryView = (\r\n    <S.Container>\r\n      <S.Wrapper>\r\n        <S.Title>현재까지 이용기록입니다</S.Title>\r\n        <S.WhiteBox>\r\n          {getCurrentPageItems().map((item) => (\r\n            <S.listStyle key={item.id} onClick={() => handleListClick(item.id)}>\r\n              {item.date} {item.id}\r\n            </S.listStyle>\r\n          ))}\r\n          <S.ButtonContainer>\r\n            <S.PageButton onClick={goToPreviousPage} disabled={page === 1}>\r\n              이전 페이지\r\n            </S.PageButton>\r\n            <S.PageInfo>\r\n              페이지 {page} / {totalPages}\r\n            </S.PageInfo>\r\n            <S.PageButton onClick={goToNextPage} disabled={page === totalPages}>\r\n              다음 페이지\r\n            </S.PageButton>\r\n          </S.ButtonContainer>\r\n        </S.WhiteBox>\r\n        <S.ReButton onClick={goMypage}>마이페이지로 돌아가기</S.ReButton>\r\n      </S.Wrapper>\r\n    </S.Container>\r\n  );\r\n\r\n  return HistoryView;\r\n}\r\n\r\nexport default History;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}