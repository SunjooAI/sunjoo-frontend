{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\Desktop\\\\BeJuRyu\\\\2023_1_WAT_BeJuRyu\\\\front\\\\src\\\\components\\\\MyPage\\\\Logout.jsx\",\n  _s = $RefreshSig$();\n/*TODO\r\n  1. 카카오 로그아웃시 쿠키 clear 추가 (자사 서비스 로그아웃은 됨)*/\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport s from \"./styled\";\nimport { useDispatch } from \"react-redux\";\nimport settingCookie from \"../../utils/settingCookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Kakao\n} = window;\nfunction Logout() {\n  _s();\n  //const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isLogin, setIsLogin] = useState(false);\n  function deleteCookie() {\n    document.cookie = \"authorize-access-token=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n    document.cookie = \"_kahai=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n  }\n\n  // logout 로컬 구현\n  const logout = () => {\n    settingCookie(\"remove\");\n    //dispatch(GET_NAME(\"\"));\n    navigate(\"/\");\n    localStorage.clear();\n  };\n  const logoutWithKakao = async () => {\n    logout();\n    Kakao.API.request({\n      url: \"/v1/user/unlink\"\n    }).then(function (response) {\n      alert(response);\n    }).catch(function (error) {\n      alert(error);\n    });\n    Kakao.Auth.logout().then(function () {\n      console.log(\"logout ok\\naccess token -> \" + Kakao.Auth.getAccessToken());\n      deleteCookie();\n      setIsLogin(false);\n      localStorage.clear();\n    }).catch(function () {\n      alert(\"Not logged in\");\n    });\n    if (Kakao.Auth.getAccessToken()) {\n      console.log(\"카카오 인증 액세스 토큰이 존재합니다.\", Kakao.Auth.getAccessToken());\n      try {\n        await Kakao.Auth.logout();\n        alert(\"로그아웃 되었습니다.\", Kakao.Auth.getAccessToken());\n        setIsLogin(false);\n        localStorage.clear();\n        window.location.href = \"/\";\n        //navigate(\"/\");\n        Kakao.Auth.setAccessToken(null); // 카카오 SDK의 자동 로그인 초기화\n\n        // 카카오 API에서 사용하는 쿠키 삭제\n        const kakaoCookies = [\"_kahai\", \"_karmt\", \"_karmtea\", \"_kawlt\", \"_kawltea\"];\n        kakaoCookies.forEach(cookie => {\n          document.cookie = cookie + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n        });\n        logout(); // 비주류 서비스 로그아웃\n      } catch (error) {\n        alert(error.message);\n      }\n    }\n  };\n  useEffect(() => {\n    // if (Kakao.Auth.getAccessToken()) {\n    setIsLogin(false);\n    // }\n  }, []);\n  const logoutView = /*#__PURE__*/_jsxDEV(s.LogoutButton, {\n    onClick: logoutWithKakao,\n    children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Logout\",\n    children: logoutView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n}\n_s(Logout, \"SzgUvVwtM30NFIdb8UFGTpWKICo=\", false, function () {\n  return [useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["useEffect","useState","useNavigate","s","useDispatch","settingCookie","jsxDEV","_jsxDEV","Kakao","window","Logout","_s","navigate","isLogin","setIsLogin","deleteCookie","document","cookie","logout","localStorage","clear","logoutWithKakao","API","request","url","then","response","alert","catch","error","Auth","console","log","getAccessToken","location","href","setAccessToken","kakaoCookies","forEach","message","logoutView","LogoutButton","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/src/components/MyPage/Logout.jsx"],"sourcesContent":["/*TODO\r\n  1. 카카오 로그아웃시 쿠키 clear 추가 (자사 서비스 로그아웃은 됨)*/\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport s from \"./styled\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport settingCookie from \"../../utils/settingCookie\";\r\nconst { Kakao } = window;\r\n\r\nfunction Logout() {\r\n  //const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  function deleteCookie() {\r\n    document.cookie =\r\n      \"authorize-access-token=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n    document.cookie = \"_kahai=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n  }\r\n\r\n  // logout 로컬 구현\r\n  const logout = () => {\r\n    settingCookie(\"remove\");\r\n    //dispatch(GET_NAME(\"\"));\r\n    navigate(\"/\");\r\n\r\n    localStorage.clear();\r\n  };\r\n\r\n  const logoutWithKakao = async () => {\r\n    logout();\r\n    Kakao.API.request({\r\n      url: \"/v1/user/unlink\",\r\n    })\r\n      .then(function (response) {\r\n        alert(response);\r\n      })\r\n      .catch(function (error) {\r\n        alert(error);\r\n      });\r\n\r\n    Kakao.Auth.logout()\r\n      .then(function () {\r\n        console.log(\r\n          \"logout ok\\naccess token -> \" + Kakao.Auth.getAccessToken()\r\n        );\r\n        deleteCookie();\r\n        setIsLogin(false);\r\n        localStorage.clear();\r\n      })\r\n      .catch(function () {\r\n        alert(\"Not logged in\");\r\n      });\r\n    if (Kakao.Auth.getAccessToken()) {\r\n      console.log(\r\n        \"카카오 인증 액세스 토큰이 존재합니다.\",\r\n        Kakao.Auth.getAccessToken()\r\n      );\r\n      try {\r\n        await Kakao.Auth.logout();\r\n        alert(\"로그아웃 되었습니다.\", Kakao.Auth.getAccessToken());\r\n        setIsLogin(false);\r\n        localStorage.clear();\r\n\r\n        window.location.href = \"/\";\r\n        //navigate(\"/\");\r\n        Kakao.Auth.setAccessToken(null); // 카카오 SDK의 자동 로그인 초기화\r\n\r\n        // 카카오 API에서 사용하는 쿠키 삭제\r\n        const kakaoCookies = [\r\n          \"_kahai\",\r\n          \"_karmt\",\r\n          \"_karmtea\",\r\n          \"_kawlt\",\r\n          \"_kawltea\",\r\n        ];\r\n        kakaoCookies.forEach((cookie) => {\r\n          document.cookie =\r\n            cookie + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n        });\r\n\r\n        logout(); // 비주류 서비스 로그아웃\r\n      } catch (error) {\r\n        alert(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if (Kakao.Auth.getAccessToken()) {\r\n    setIsLogin(false);\r\n    // }\r\n  }, []);\r\n\r\n  const logoutView = (\r\n    <s.LogoutButton onClick={logoutWithKakao}>로그아웃</s.LogoutButton>\r\n  );\r\n\r\n  return <div className=\"Logout\">{logoutView}</div>;\r\n}\r\n\r\nexport default Logout;\r\n"],"mappings":";;AAAA;AACA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,CAAC,MAAM,UAAU;AACxB,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtD,MAAM;EAAEC;AAAM,CAAC,GAAGC,MAAM;AAExB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB;EACA,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,SAASc,YAAYA,CAAA,EAAG;IACtBC,QAAQ,CAACC,MAAM,GACb,yEAAyE;IAC3ED,QAAQ,CAACC,MAAM,GAAG,yDAAyD;EAC7E;;EAEA;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBb,aAAa,CAAC,QAAQ,CAAC;IACvB;IACAO,QAAQ,CAAC,GAAG,CAAC;IAEbO,YAAY,CAACC,KAAK,EAAE;EACtB,CAAC;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCH,MAAM,EAAE;IACRV,KAAK,CAACc,GAAG,CAACC,OAAO,CAAC;MAChBC,GAAG,EAAE;IACP,CAAC,CAAC,CACCC,IAAI,CAAC,UAAUC,QAAQ,EAAE;MACxBC,KAAK,CAACD,QAAQ,CAAC;IACjB,CAAC,CAAC,CACDE,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBF,KAAK,CAACE,KAAK,CAAC;IACd,CAAC,CAAC;IAEJrB,KAAK,CAACsB,IAAI,CAACZ,MAAM,EAAE,CAChBO,IAAI,CAAC,YAAY;MAChBM,OAAO,CAACC,GAAG,CACT,6BAA6B,GAAGxB,KAAK,CAACsB,IAAI,CAACG,cAAc,EAAE,CAC5D;MACDlB,YAAY,EAAE;MACdD,UAAU,CAAC,KAAK,CAAC;MACjBK,YAAY,CAACC,KAAK,EAAE;IACtB,CAAC,CAAC,CACDQ,KAAK,CAAC,YAAY;MACjBD,KAAK,CAAC,eAAe,CAAC;IACxB,CAAC,CAAC;IACJ,IAAInB,KAAK,CAACsB,IAAI,CAACG,cAAc,EAAE,EAAE;MAC/BF,OAAO,CAACC,GAAG,CACT,uBAAuB,EACvBxB,KAAK,CAACsB,IAAI,CAACG,cAAc,EAAE,CAC5B;MACD,IAAI;QACF,MAAMzB,KAAK,CAACsB,IAAI,CAACZ,MAAM,EAAE;QACzBS,KAAK,CAAC,aAAa,EAAEnB,KAAK,CAACsB,IAAI,CAACG,cAAc,EAAE,CAAC;QACjDnB,UAAU,CAAC,KAAK,CAAC;QACjBK,YAAY,CAACC,KAAK,EAAE;QAEpBX,MAAM,CAACyB,QAAQ,CAACC,IAAI,GAAG,GAAG;QAC1B;QACA3B,KAAK,CAACsB,IAAI,CAACM,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;;QAEjC;QACA,MAAMC,YAAY,GAAG,CACnB,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,UAAU,CACX;QACDA,YAAY,CAACC,OAAO,CAAErB,MAAM,IAAK;UAC/BD,QAAQ,CAACC,MAAM,GACbA,MAAM,GAAG,mDAAmD;QAChE,CAAC,CAAC;QAEFC,MAAM,EAAE,CAAC,CAAC;MACZ,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdF,KAAK,CAACE,KAAK,CAACU,OAAO,CAAC;MACtB;IACF;EACF,CAAC;EAEDvC,SAAS,CAAC,MAAM;IACd;IACAc,UAAU,CAAC,KAAK,CAAC;IACjB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM0B,UAAU,gBACdjC,OAAA,CAACJ,CAAC,CAACsC,YAAY;IAACC,OAAO,EAAErB,eAAgB;IAAAsB,QAAA,EAAC;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC/C;EAED,oBAAOxC,OAAA;IAAKyC,SAAS,EAAC,QAAQ;IAAAL,QAAA,EAAEH;EAAU;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AACnD;AAACpC,EAAA,CA1FQD,MAAM;EAAA,QAEIR,WAAW;AAAA;AAAA+C,EAAA,GAFrBvC,MAAM;AA4Ff,eAAeA,MAAM;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}