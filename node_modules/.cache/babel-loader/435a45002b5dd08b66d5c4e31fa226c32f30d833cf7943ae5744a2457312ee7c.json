{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\Desktop\\\\BeJuRyu\\\\2023_1_WAT_BeJuRyu\\\\front\\\\src\\\\components\\\\MyPage\\\\Logout.jsx\",\n  _s = $RefreshSig$();\n/*TODO\r\n  1. 카카오 로그아웃시 쿠키 clear 추가 (자사 서비스 로그아웃은 됨)*/\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport s from \"./styled\";\nimport { useDispatch } from \"react-redux\";\nimport { GET_NAME } from \"../../reducer/nameSlice\";\nimport settingCookie from \"../../utils/settingCookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Kakao\n} = window;\nfunction Logout() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate;\n  const [isLogin, setIsLogin] = useState(false);\n  function deleteAllCookies() {\n    const cookies = document.cookie.split(\";\");\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i];\n      const eqPos = cookie.indexOf(\"=\");\n      const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;\";\n    }\n  }\n  const logout = () => {\n    settingCookie(\"remove\");\n    dispatch(GET_NAME(\"\"));\n    navigate(\"/\");\n  };\n  const logoutWithKakao = async () => {\n    if (Kakao.Auth.getAccessToken()) {\n      console.log(\"카카오 인증 액세스 토큰이 존재합니다.\", Kakao.Auth.getAccessToken());\n      Kakao.Auth.logout(() => {\n        console.log(\"로그아웃 되었습니다.\", Kakao.Auth.getAccessToken());\n        setIsLogin(false);\n        localStorage.clear();\n        window.location.href = \"/\";\n        //Kakao.Auth.setAccessToken(null); // 카카오 SDK의 자동 로그인 초기화\n\n        // 카카오 API에서 사용하는 쿠키 삭제\n        const kakaoCookies = [\"_kahai\", \"_karmt\", \"_karmtea\", \"_kawlt\", \"_kawltea\"];\n        kakaoCookies.forEach(cookie => {\n          document.cookie = cookie + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n        });\n        logout(); // 비주류 서비스 로그아웃\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (Kakao.Auth.getAccessToken()) {\n      setIsLogin(false);\n    }\n  }, []);\n  const logoutView = /*#__PURE__*/_jsxDEV(s.LogoutButton, {\n    onClick: logoutWithKakao,\n    children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Logout\",\n    children: logoutView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 10\n  }, this);\n}\n_s(Logout, \"InrQOLLa7Zvw8dfPWCoQbzen850=\", false, function () {\n  return [useDispatch];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["useEffect","useState","useNavigate","s","useDispatch","GET_NAME","settingCookie","jsxDEV","_jsxDEV","Kakao","window","Logout","_s","dispatch","navigate","isLogin","setIsLogin","deleteAllCookies","cookies","document","cookie","split","i","length","eqPos","indexOf","name","substr","logout","logoutWithKakao","Auth","getAccessToken","console","log","localStorage","clear","location","href","kakaoCookies","forEach","logoutView","LogoutButton","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/src/components/MyPage/Logout.jsx"],"sourcesContent":["/*TODO\r\n  1. 카카오 로그아웃시 쿠키 clear 추가 (자사 서비스 로그아웃은 됨)*/\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport s from \"./styled\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { GET_NAME } from \"../../reducer/nameSlice\";\r\nimport settingCookie from \"../../utils/settingCookie\";\r\nconst { Kakao } = window;\r\n\r\nfunction Logout() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate;\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  function deleteAllCookies() {\r\n    const cookies = document.cookie.split(\";\");\r\n\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i];\r\n      const eqPos = cookie.indexOf(\"=\");\r\n      const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n      document.cookie =\r\n        name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;\";\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    settingCookie(\"remove\");\r\n    dispatch(GET_NAME(\"\"));\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const logoutWithKakao = async () => {\r\n    if (Kakao.Auth.getAccessToken()) {\r\n      console.log(\r\n        \"카카오 인증 액세스 토큰이 존재합니다.\",\r\n        Kakao.Auth.getAccessToken()\r\n      );\r\n      Kakao.Auth.logout(() => {\r\n        console.log(\"로그아웃 되었습니다.\", Kakao.Auth.getAccessToken());\r\n        setIsLogin(false);\r\n        localStorage.clear();\r\n        window.location.href = \"/\";\r\n        //Kakao.Auth.setAccessToken(null); // 카카오 SDK의 자동 로그인 초기화\r\n\r\n        // 카카오 API에서 사용하는 쿠키 삭제\r\n        const kakaoCookies = [\r\n          \"_kahai\",\r\n          \"_karmt\",\r\n          \"_karmtea\",\r\n          \"_kawlt\",\r\n          \"_kawltea\",\r\n        ];\r\n        kakaoCookies.forEach((cookie) => {\r\n          document.cookie =\r\n            cookie + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n        });\r\n\r\n        logout(); // 비주류 서비스 로그아웃\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Kakao.Auth.getAccessToken()) {\r\n      setIsLogin(false);\r\n    }\r\n  }, []);\r\n\r\n  const logoutView = (\r\n    <s.LogoutButton onClick={logoutWithKakao}>로그아웃</s.LogoutButton>\r\n  );\r\n\r\n  return <div className=\"Logout\">{logoutView}</div>;\r\n}\r\n\r\nexport default Logout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}