{"ast":null,"code":"import nameReducer from \"../reducer/nameSlice.js\";\nimport dictionaryReducer from \"../reducer/dictionaryReducer.js\";\nimport { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { persistReducer, persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst rootReducer = combineReducers({\n  name: nameReducer\n});\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"name\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n  // name: nameReducer,\n  //dictionary: dictionaryReducer,\n});\n\n//const persistor = persistStore(store);\n\nexport default store;","map":{"version":3,"names":["nameReducer","dictionaryReducer","configureStore","combineReducers","persistReducer","persistStore","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","rootReducer","name","persistConfig","key","whitelist","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions"],"sources":["C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/src/store/store.js"],"sourcesContent":["import nameReducer from \"../reducer/nameSlice.js\";\r\nimport dictionaryReducer from \"../reducer/dictionaryReducer.js\";\r\nimport { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistReducer,\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst rootReducer = combineReducers({\r\n  name: nameReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"name\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  // name: nameReducer,\r\n  //dictionary: dictionaryReducer,\r\n});\r\n\r\n//const persistor = persistStore(store);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,yBAAyB;AACjD,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,SAASC,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,SACEC,cAAc,EACdC,YAAY,EACZC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,MAAMC,WAAW,GAAGV,eAAe,CAAC;EAClCW,IAAI,EAAEd;AACR,CAAC,CAAC;AAEF,MAAMe,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXJ,OAAO;EACPK,SAAS,EAAE,CAAC,MAAM;AACpB,CAAC;AAED,MAAMC,gBAAgB,GAAGd,cAAc,CAACW,aAAa,EAAEF,WAAW,CAAC;AAEnE,MAAMM,KAAK,GAAGjB,cAAc,CAAC;EAC3BkB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAClB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;EACH;EACA;AACF,CAAC,CAAC;;AAEF;;AAEA,eAAeQ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}