{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\Desktop\\\\BeJuRyu\\\\2023_1_WAT_BeJuRyu\\\\front\\\\src\\\\components\\\\MyPage\\\\MyPage.jsx\",\n  _s = $RefreshSig$();\n/* TODO\r\n  1. [o] 닉네임 변경 기능 추가 \r\n  2. [o]리뷰많은 순 랭킹 조회\r\n  3. [o]평점순 랭킹 조회 */\n\nimport S from \"./styled\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport settingCookie from \"../../utils/settingCookie\";\nimport { useDispatch } from \"react-redux\";\nimport Logout from \"./Logout\";\nimport authClient from \"../../apis/authClient\";\nimport noAuthClient from \"../../apis/noAuthClient\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyPage() {\n  _s();\n  // 리뷰순 랭킹\n  const [reviewRank, setReviewRank] = useState([]);\n  // 평점순 랭킹\n  const [scoreRank, setScoreRank] = useState([]);\n  // 로딩 상태를 관리하는 변수\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedData, setSelectedData] = useState(null);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userId = parseInt(localStorage.getItem(\"user-id\"));\n\n  // 이미지 디코딩 함수\n  const decodeBase64 = base64 => {\n    const binaryString = window.atob(base64);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    return URL.createObjectURL(new Blob([bytes.buffer], {\n      type: \"image/png\"\n    }));\n  };\n\n  //console.log(typeof userId);\n\n  // 주류 랭킹 보여주기 위해 api 요청\n  useEffect(() => {\n    const getReviewRanking = async () => {\n      try {\n        const response = await noAuthClient({\n          method: \"get\",\n          url: `/drinks/rankings/review`\n        });\n        if (response) {\n          setReviewRank(response.data.ranking);\n          setIsLoading(false);\n          console.log(response.data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const getScoreRanking = async () => {\n      try {\n        const response = await noAuthClient({\n          method: \"get\",\n          url: `/drinks/rankings/rating`\n        });\n        if (response) {\n          setScoreRank(response.data.ranking);\n          console.log(\"scoreRanking\", response.data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    // API 요청 함수 호출\n    getReviewRanking();\n    getScoreRanking();\n  }, []);\n\n  // 각 주류 상세 페이지로 이동\n  const checkJuryuInfo = async (e, juryuId) => {\n    e.preventDefault();\n    navigate(\"/juryuInfo\", {\n      state: {\n        juryuId\n      }\n    });\n    try {\n      const res = await noAuthClient({\n        method: \"get\",\n        url: `/drinks/${juryuId}`\n      });\n      if (res) {\n        console.log(res);\n      } else {\n        console.log(\"res엄썽\");\n      }\n    } catch (error) {\n      if (error.response) {\n        const err = error.response.data;\n        console.log(err);\n      }\n    }\n  };\n  const checkHistory = async e => {\n    e.preventDefault();\n    navigate(\"/history\");\n    try {\n      const res = await authClient({\n        method: \"get\",\n        url: \"/analyze\"\n      });\n      console.log(res);\n    } catch (error) {\n      if (error.response) {\n        const err = error.response.data;\n        console.log(err);\n      } else {\n        // 네트워크 에러 또는 클라이언트 에러\n        console.log(\"Error:\", error.message);\n      }\n    }\n\n    // 닉네임 조회\n    try {\n      const response = await authClient({\n        method: \"get\",\n        url: `/member`\n      });\n      console.log(\"떵공\");\n      console.log(\"member api response:\", response);\n    } catch (error) {\n      if (error.response) {\n        const err = error.response.data;\n        console.log(err);\n      }\n    }\n  };\n  const changeNick = () => {\n    navigate(\"/nickChange\");\n  };\n  const userName = localStorage.getItem(\"nickname\");\n  const handleReviewData = () => {\n    setSelectedData(reviewRank);\n  };\n  const handleScoreData = () => {\n    setSelectedData(scoreRank);\n  };\n  const MyPageView = /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(S.Info, {\n      children: [/*#__PURE__*/_jsxDEV(S.LogoutButton, {\n        onClick: checkHistory,\n        children: \"\\uD788\\uC2A4\\uD1A0\\uB9AC \\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.LogoutButton, {\n        type: \"button\",\n        onClick: changeNick,\n        children: \"\\uB2C9\\uB124\\uC784 \\uBCC0\\uACBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Wrapper, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n  return MyPageView;\n}\n_s(MyPage, \"weRAcv3sjROLxx1EtAKYb1Z5Q7U=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["S","useEffect","useState","useNavigate","settingCookie","useDispatch","Logout","authClient","noAuthClient","CircularProgress","useSelector","jsxDEV","_jsxDEV","MyPage","_s","reviewRank","setReviewRank","scoreRank","setScoreRank","isLoading","setIsLoading","selectedData","setSelectedData","navigate","dispatch","userId","parseInt","localStorage","getItem","decodeBase64","base64","binaryString","window","atob","bytes","Uint8Array","length","i","charCodeAt","URL","createObjectURL","Blob","buffer","type","getReviewRanking","response","method","url","data","ranking","console","log","error","getScoreRanking","checkJuryuInfo","e","juryuId","preventDefault","state","res","err","checkHistory","message","changeNick","userName","handleReviewData","handleScoreData","MyPageView","Container","children","Info","LogoutButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Wrapper","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/src/components/MyPage/MyPage.jsx"],"sourcesContent":["/* TODO\r\n  1. [o] 닉네임 변경 기능 추가 \r\n  2. [o]리뷰많은 순 랭킹 조회\r\n  3. [o]평점순 랭킹 조회 */\r\n\r\nimport S from \"./styled\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport settingCookie from \"../../utils/settingCookie\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Logout from \"./Logout\";\r\nimport authClient from \"../../apis/authClient\";\r\nimport noAuthClient from \"../../apis/noAuthClient\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction MyPage() {\r\n  // 리뷰순 랭킹\r\n  const [reviewRank, setReviewRank] = useState([]);\r\n  // 평점순 랭킹\r\n  const [scoreRank, setScoreRank] = useState([]);\r\n  // 로딩 상태를 관리하는 변수\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedData, setSelectedData] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const userId = parseInt(localStorage.getItem(\"user-id\"));\r\n\r\n  // 이미지 디코딩 함수\r\n  const decodeBase64 = (base64) => {\r\n    const binaryString = window.atob(base64);\r\n    const bytes = new Uint8Array(binaryString.length);\r\n    for (let i = 0; i < binaryString.length; i++) {\r\n      bytes[i] = binaryString.charCodeAt(i);\r\n    }\r\n    return URL.createObjectURL(new Blob([bytes.buffer], { type: \"image/png\" }));\r\n  };\r\n\r\n  //console.log(typeof userId);\r\n\r\n  // 주류 랭킹 보여주기 위해 api 요청\r\n  useEffect(() => {\r\n    const getReviewRanking = async () => {\r\n      try {\r\n        const response = await noAuthClient({\r\n          method: \"get\",\r\n          url: `/drinks/rankings/review`,\r\n        });\r\n        if (response) {\r\n          setReviewRank(response.data.ranking);\r\n          setIsLoading(false);\r\n          console.log(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    const getScoreRanking = async () => {\r\n      try {\r\n        const response = await noAuthClient({\r\n          method: \"get\",\r\n          url: `/drinks/rankings/rating`,\r\n        });\r\n        if (response) {\r\n          setScoreRank(response.data.ranking);\r\n\r\n          console.log(\"scoreRanking\", response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    // API 요청 함수 호출\r\n    getReviewRanking();\r\n    getScoreRanking();\r\n  }, []);\r\n\r\n  // 각 주류 상세 페이지로 이동\r\n  const checkJuryuInfo = async (e, juryuId) => {\r\n    e.preventDefault();\r\n    navigate(\"/juryuInfo\", { state: { juryuId } });\r\n\r\n    try {\r\n      const res = await noAuthClient({\r\n        method: \"get\",\r\n        url: `/drinks/${juryuId}`,\r\n      });\r\n      if (res) {\r\n        console.log(res);\r\n      } else {\r\n        console.log(\"res엄썽\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        const err = error.response.data;\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkHistory = async (e) => {\r\n    e.preventDefault();\r\n    navigate(\"/history\");\r\n\r\n    try {\r\n      const res = await authClient({\r\n        method: \"get\",\r\n        url: \"/analyze\",\r\n      });\r\n      console.log(res);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        const err = error.response.data;\r\n        console.log(err);\r\n      } else {\r\n        // 네트워크 에러 또는 클라이언트 에러\r\n        console.log(\"Error:\", error.message);\r\n      }\r\n    }\r\n\r\n    // 닉네임 조회\r\n    try {\r\n      const response = await authClient({\r\n        method: \"get\",\r\n        url: `/member`,\r\n      });\r\n      console.log(\"떵공\");\r\n      console.log(\"member api response:\", response);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        const err = error.response.data;\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const changeNick = () => {\r\n    navigate(\"/nickChange\");\r\n  };\r\n\r\n  const userName = localStorage.getItem(\"nickname\");\r\n\r\n  const handleReviewData = () => {\r\n    setSelectedData(reviewRank);\r\n  };\r\n\r\n  const handleScoreData = () => {\r\n    setSelectedData(scoreRank);\r\n  };\r\n  const MyPageView = (\r\n    <S.Container>\r\n      <S.Info>\r\n        <S.LogoutButton onClick={checkHistory}>히스토리 확인</S.LogoutButton>\r\n\r\n        <S.LogoutButton type=\"button\" onClick={changeNick}>\r\n          닉네임 변경\r\n        </S.LogoutButton>\r\n        <Logout />\r\n      </S.Info>\r\n      <S.Wrapper></S.Wrapper>\r\n    </S.Container>\r\n  );\r\n\r\n  return MyPageView;\r\n}\r\n\r\nexport default MyPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}