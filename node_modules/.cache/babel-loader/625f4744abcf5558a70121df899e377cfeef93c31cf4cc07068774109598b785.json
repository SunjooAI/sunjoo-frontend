{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/* 로그인, 회원가입의 로직\r\n  1. [x]카카오 토큰을 받아온다\r\n  2. [x]서버에게 GET 요청 (서버와 통신 될때 넣을 얘쩡)\r\n  3. [x]JWT 토큰(access, refresh)을 RESPONSE로 받게 되고 localstorage나 cookie에 저장시킨다. => 현재 cookie 사용으로 setting 해놓음.\r\n  4. */import{useEffect,useState}from\"react\";import{useNavigate,withRouter}from\"react-router-dom\";// import axios from \"axios\";\nimport{Cookies}from\"react-cookie\";import S from\"./styled\";import logo from\"../../image/logo2.png\";import{useDispatch}from\"react-redux\";import jwt_decode from\"jwt-decode\";import{GET_NAME}from\"../../reducer/nameSlice\";import noAuthClient from\"../../apis/noAuthClient\";import authClient from\"../../apis/authClient\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _window=window,Kakao=_window.Kakao;function Login(){var navigate=useNavigate();var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLogin=_useState2[0],setIsLogin=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),jwtToken=_useState4[0],setJwtToken=_useState4[1];// snsLogin\nvar snsLogin=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(kakaoToken){var res,cookie;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return noAuthClient({method:\"get\",url:\"/auth/login?token=\".concat(kakaoToken)});case 3:res=_context.sent;cookie=new Cookies();cookie.set(\"accessToken\",res.data.token.access);cookie.set(\"refreshToken\",res.data.token.refresh);// const decode = jwt_decode(res.data.token.access);\n// redux에 nickname 저장\ndispatch(GET_NAME(res.data.memberResponse.nickname));localStorage.setItem(\"user-id\",res.data.memberResponse.id);localStorage.setItem(\"nickname\",res.data.memberResponse.nickname);_context.next=12;return sendTestRequest();case 12:_context.next=16;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);case 16:case\"end\":return _context.stop();}},_callee,null,[[0,14]]);}));return function snsLogin(_x){return _ref.apply(this,arguments);};}();// test 용\n// 테스트용 GET 요청\nvar sendTestRequest=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return authClient({method:\"get\",url:\"/test\"});case 3:res=_context2.sent;_context2.next=9;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);console.error(\"Test Error:\",_context2.t0);case 9:case\"end\":return _context2.stop();}},_callee2,null,[[0,6]]);}));return function sendTestRequest(){return _ref2.apply(this,arguments);};}();// 로그인\nvar login=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:e.preventDefault();_context4.prev=1;return _context4.abrupt(\"return\",new Promise(function(resolve,reject){if(!Kakao){reject(\"Kakao 인스턴스가 존재하지 않습니다.\");}Kakao.Auth.login({success:function(){var _success=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(res){var access_token;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:// 서버에 GET 요청을 보내는 작업\naccess_token=res.access_token;// snsLogin 함수 호출\n_context3.next=3;return snsLogin(access_token);case 3:navigate(\"/\");// test 요청 보내기\n// await sendTestRequest();\n// setIsLogin(true);\n//console.log(res);\ncase 4:case\"end\":return _context3.stop();}},_callee3);}));function success(_x3){return _success.apply(this,arguments);}return success;}(),fail:function fail(err){console.error(err);}});}));case 5:_context4.prev=5;_context4.t0=_context4[\"catch\"](1);console.error(_context4.t0);case 8:case\"end\":return _context4.stop();}},_callee4,null,[[1,5]]);}));return function login(_x2){return _ref3.apply(this,arguments);};}();useEffect(function(){if(Kakao.Auth.getAccessToken()){setIsLogin(true);}},[]);return/*#__PURE__*/_jsx(S.Container,{children:/*#__PURE__*/_jsxs(S.Wrapper,{children:[/*#__PURE__*/_jsx(S.Title,{children:\"BeJuRyu \\uC11C\\uBE44\\uC2A4\\uC5D0 \\uC624\\uC2E0\\uAC83\\uC744 \\uD658\\uC601\\uD569\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(S.Form,{children:/*#__PURE__*/_jsx(S.bejuryuImg,{src:logo,alt:\"logo\"})}),/*#__PURE__*/_jsx(S.explainBox,{children:\"\\uB9CE\\uC774 \\uB9C8\\uC2DC\\uBA74 \\uD574\\uB86D\\uC9C0\\uB9CC, \\uC990\\uAC81\\uAC8C \\uB9C8\\uC2DC\\uBA74 \\uD65C\\uB825\\uC18C\\uAC00 \\uB418\\uC5B4 \\uC90D\\uB2C8\\uB2E4. \\uC624\\uB298, BeJuRyu\\uC640 \\uD568\\uAED8 \\uC220 \\uD55C\\uC794 \\uC5B4\\uB5A4\\uAC00\\uC694?\"}),/*#__PURE__*/_jsx(S.BtnList,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{id:\"kakao-login-btn\",onClick:login,style:{cursor:\"pointer\"},children:/*#__PURE__*/_jsx(\"img\",{src:\"https://k.kakaocdn.net/14/dn/btroDszwNrM/I6efHub1SN5KCJqLm1Ovx1/o.jpg\",width:\"222\",alt:\"\\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC778 \\uBC84\\uD2BC\"})})})})]})});}export default Login;","map":{"version":3,"names":["useEffect","useState","useNavigate","withRouter","Cookies","S","logo","useDispatch","jwt_decode","GET_NAME","noAuthClient","authClient","jsx","_jsx","jsxs","_jsxs","_window","window","Kakao","Login","navigate","dispatch","_useState","_useState2","_slicedToArray","isLogin","setIsLogin","_useState3","_useState4","jwtToken","setJwtToken","snsLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","kakaoToken","res","cookie","wrap","_callee$","_context","prev","next","method","url","concat","sent","set","data","token","access","refresh","memberResponse","nickname","localStorage","setItem","id","sendTestRequest","t0","stop","_x","apply","arguments","_ref2","_callee2","_callee2$","_context2","console","error","login","_ref3","_callee4","e","_callee4$","_context4","preventDefault","abrupt","Promise","resolve","reject","Auth","success","_success","_callee3","access_token","_callee3$","_context3","_x3","fail","err","_x2","getAccessToken","Container","children","Wrapper","Title","Form","bejuryuImg","src","alt","explainBox","BtnList","onClick","style","cursor","width"],"sources":["C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/src/components/Login/Login.jsx"],"sourcesContent":["/* 로그인, 회원가입의 로직\r\n  1. [x]카카오 토큰을 받아온다\r\n  2. [x]서버에게 GET 요청 (서버와 통신 될때 넣을 얘쩡)\r\n  3. [x]JWT 토큰(access, refresh)을 RESPONSE로 받게 되고 localstorage나 cookie에 저장시킨다. => 현재 cookie 사용으로 setting 해놓음.\r\n  4. */\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, withRouter } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\nimport { Cookies } from \"react-cookie\";\r\nimport S from \"./styled\";\r\nimport logo from \"../../image/logo2.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { GET_NAME } from \"../../reducer/nameSlice\";\r\nimport noAuthClient from \"../../apis/noAuthClient\";\r\nimport authClient from \"../../apis/authClient\";\r\n\r\nconst { Kakao } = window;\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [jwtToken, setJwtToken] = useState(\"\");\r\n\r\n  // snsLogin\r\n  const snsLogin = async (kakaoToken) => {\r\n    try {\r\n      const res = await noAuthClient({\r\n        method: \"get\",\r\n        url: `/auth/login?token=${kakaoToken}`,\r\n      });\r\n\r\n      const cookie = new Cookies();\r\n      cookie.set(\"accessToken\", res.data.token.access);\r\n      cookie.set(\"refreshToken\", res.data.token.refresh);\r\n\r\n      // const decode = jwt_decode(res.data.token.access);\r\n\r\n      // redux에 nickname 저장\r\n      dispatch(GET_NAME(res.data.memberResponse.nickname));\r\n\r\n      localStorage.setItem(\"user-id\", res.data.memberResponse.id);\r\n      localStorage.setItem(\"nickname\", res.data.memberResponse.nickname);\r\n\r\n      await sendTestRequest();\r\n    } catch (error) {}\r\n  };\r\n\r\n  // test 용\r\n  // 테스트용 GET 요청\r\n  const sendTestRequest = async () => {\r\n    try {\r\n      const res = await authClient({\r\n        method: \"get\",\r\n        url: \"/test\",\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Test Error:\", error);\r\n    }\r\n  };\r\n\r\n  // 로그인\r\n  const login = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      return new Promise((resolve, reject) => {\r\n        if (!Kakao) {\r\n          reject(\"Kakao 인스턴스가 존재하지 않습니다.\");\r\n        }\r\n        Kakao.Auth.login({\r\n          success: async (res) => {\r\n            // 서버에 GET 요청을 보내는 작업\r\n            const { access_token } = res;\r\n\r\n            // snsLogin 함수 호출\r\n            await snsLogin(access_token);\r\n            navigate(\"/\");\r\n\r\n            // test 요청 보내기\r\n            // await sendTestRequest();\r\n\r\n            // setIsLogin(true);\r\n            //console.log(res);\r\n          },\r\n          fail: (err) => {\r\n            console.error(err);\r\n          },\r\n        });\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Kakao.Auth.getAccessToken()) {\r\n      setIsLogin(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.Wrapper>\r\n        <S.Title>BeJuRyu 서비스에 오신것을 환영합니다.</S.Title>\r\n        <S.Form>\r\n          <S.bejuryuImg src={logo} alt=\"logo\"></S.bejuryuImg>\r\n        </S.Form>\r\n        <S.explainBox>\r\n          많이 마시면 해롭지만, 즐겁게 마시면 활력소가 되어 줍니다. 오늘,\r\n          BeJuRyu와 함께 술 한잔 어떤가요?\r\n        </S.explainBox>\r\n        <S.BtnList>\r\n          <div>\r\n            <div\r\n              id=\"kakao-login-btn\"\r\n              onClick={login}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <img\r\n                src=\"https://k.kakaocdn.net/14/dn/btroDszwNrM/I6efHub1SN5KCJqLm1Ovx1/o.jpg\"\r\n                width=\"222\"\r\n                alt=\"카카오 로그인 버튼\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </S.BtnList>\r\n      </S.Wrapper>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}