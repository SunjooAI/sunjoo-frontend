{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\Desktop\\\\BeJuRyu\\\\2023_1_WAT_BeJuRyu\\\\front\\\\src\\\\components\\\\Recommend\\\\Recommend.jsx\",\n  _s = $RefreshSig$();\n/* TODO\r\n1. 거의 완료\r\n2. [X] 이미지 첨부 후 서버와 통신할 때 json로 넘기는 방법 찾아볼 것.(facial-expression: string => base64 인코딩\r\n3. [X] 현재 줄글 작성 부분과 이미지 들어가는 게 따로 구현되있는데, 서버 넘길때 한 번에 넘겨야되므로 코드 합침 필요\r\n  => formData*/\nimport S from \"./styled\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport PhotoUpload from \"./PhotoUpload\";\nimport authClient from \"../../apis/authClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recommend() {\n  _s();\n  const navigate = useNavigate();\n  const [jwtToken, setJwtToken] = useState(\"\");\n  const [imagePreview, setImagePreview] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\"); // 텍스트 입력값 상태 추가\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    navigate(\"/result\");\n    if (selectedFile) {\n      const reader = new FileReader();\n      // base64 encoding해서\n      reader.onloadend = async () => {\n        const base64Data = reader.result.split(\",\")[1];\n        reader.readAsDataURL(selectedFile); // 이미지 파일을 Base64로 인코딩\n        console.log(base64Data);\n        console.log(inputValue);\n        try {\n          const res = await authClient({\n            method: \"post\",\n            url: \"/analyze/sources\",\n            data: {\n              \"user-id\": parseInt(localStorage.getItem(\"user-id\"), 10),\n              \"text-expression\": inputValue,\n              \"facial-expression\": base64Data\n            }\n          });\n\n          // 서버 응답 처리\n        } catch (error) {\n          if (error.response) {\n            // 서버 응답 에러\n            const err = error.response.data;\n            console.log(err);\n          } else {\n            // 네트워크 에러 또는 클라이언트 에러\n            console.log(\"Error:\", error.message);\n          }\n        }\n      };\n      reader.readAsDataURL(selectedFile);\n      // const userId = localStorage.getItem(\"user-id\");\n      // console.log(typeof parseInt(userId, 10));\n    }\n  };\n\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleFileChange = file => {\n    setSelectedFile(file);\n    //setInputValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: /*#__PURE__*/_jsxDEV(S.Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(S.Title, {\n        children: \"\\uC8FC\\uB958 \\uCD94\\uCC9C\\uC744 \\uBC1B\\uAE30 \\uC704\\uD574\\uC11C \\uD544\\uC694\\uD55C \\uC815\\uBCF4\\uB97C \\uC54C\\uB824\\uC8FC\\uC138\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.WhiteBox, {\n        children: [/*#__PURE__*/_jsxDEV(S.textInput, {\n          value: inputValue,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), inputValue === \"\" && /*#__PURE__*/_jsxDEV(S.MyState, {\n          children: \"\\uD604\\uC7AC \\uAE30\\uBD84\\uC774 \\uC5B4\\uB5A0\\uC2E0\\uAC00\\uC694? \\uAC04\\uB2E8\\uD558\\uAC8C \\uC801\\uC5B4\\uC8FC\\uC138\\uC694 !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PhotoUpload, {\n        setSelectedFile: handleFileChange,\n        setImagePreview: setImagePreview,\n        imagePreview: imagePreview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.SubmitButton, {\n        onClick: handleFormSubmit,\n        children: \"\\uBD84\\uC11D \\uC2DC\\uC791\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Recommend, \"wmiiSQGMuDoRfIkjV8fDF4D/zPM=\", false, function () {\n  return [useNavigate];\n});\n_c = Recommend;\nexport default Recommend;\nvar _c;\n$RefreshReg$(_c, \"Recommend\");","map":{"version":3,"names":["S","useState","useNavigate","PhotoUpload","authClient","jsxDEV","_jsxDEV","Recommend","_s","navigate","jwtToken","setJwtToken","imagePreview","setImagePreview","selectedFile","setSelectedFile","inputValue","setInputValue","handleFormSubmit","e","preventDefault","reader","FileReader","onloadend","base64Data","result","split","readAsDataURL","console","log","res","method","url","data","parseInt","localStorage","getItem","error","response","err","message","handleInputChange","target","value","handleFileChange","file","Container","children","Wrapper","Title","fileName","_jsxFileName","lineNumber","columnNumber","WhiteBox","textInput","onChange","MyState","SubmitButton","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/src/components/Recommend/Recommend.jsx"],"sourcesContent":["/* TODO\r\n1. 거의 완료\r\n2. [X] 이미지 첨부 후 서버와 통신할 때 json로 넘기는 방법 찾아볼 것.(facial-expression: string => base64 인코딩\r\n3. [X] 현재 줄글 작성 부분과 이미지 들어가는 게 따로 구현되있는데, 서버 넘길때 한 번에 넘겨야되므로 코드 합침 필요\r\n  => formData*/\r\nimport S from \"./styled\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PhotoUpload from \"./PhotoUpload\";\r\nimport authClient from \"../../apis/authClient\";\r\n\r\nfunction Recommend() {\r\n  const navigate = useNavigate();\r\n  const [jwtToken, setJwtToken] = useState(\"\");\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [inputValue, setInputValue] = useState(\"\"); // 텍스트 입력값 상태 추가\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    navigate(\"/result\");\r\n    if (selectedFile) {\r\n      const reader = new FileReader();\r\n      // base64 encoding해서\r\n      reader.onloadend = async () => {\r\n        const base64Data = reader.result.split(\",\")[1];\r\n        reader.readAsDataURL(selectedFile); // 이미지 파일을 Base64로 인코딩\r\n        console.log(base64Data);\r\n        console.log(inputValue);\r\n        try {\r\n          const res = await authClient({\r\n            method: \"post\",\r\n            url: \"/analyze/sources\",\r\n            data: {\r\n              \"user-id\": parseInt(localStorage.getItem(\"user-id\"), 10),\r\n              \"text-expression\": inputValue,\r\n              \"facial-expression\": base64Data,\r\n            },\r\n          });\r\n\r\n          // 서버 응답 처리\r\n        } catch (error) {\r\n          if (error.response) {\r\n            // 서버 응답 에러\r\n            const err = error.response.data;\r\n            console.log(err);\r\n          } else {\r\n            // 네트워크 에러 또는 클라이언트 에러\r\n            console.log(\"Error:\", error.message);\r\n          }\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(selectedFile);\r\n      // const userId = localStorage.getItem(\"user-id\");\r\n      // console.log(typeof parseInt(userId, 10));\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleFileChange = (file) => {\r\n    setSelectedFile(file);\r\n    //setInputValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.Wrapper>\r\n        <S.Title>주류 추천을 받기 위해서 필요한 정보를 알려주세요!</S.Title>\r\n        <S.WhiteBox>\r\n          <S.textInput value={inputValue} onChange={handleInputChange} />\r\n          {inputValue === \"\" && (\r\n            <S.MyState>현재 기분이 어떠신가요? 간단하게 적어주세요 !</S.MyState>\r\n          )}\r\n        </S.WhiteBox>\r\n        <PhotoUpload\r\n          setSelectedFile={handleFileChange}\r\n          setImagePreview={setImagePreview}\r\n          imagePreview={imagePreview}\r\n        />\r\n\r\n        <S.SubmitButton onClick={handleFormSubmit}>분석 시작</S.SubmitButton>\r\n      </S.Wrapper>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default Recommend;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}