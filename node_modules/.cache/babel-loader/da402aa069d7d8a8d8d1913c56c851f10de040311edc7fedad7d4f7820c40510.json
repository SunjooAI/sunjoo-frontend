{"ast":null,"code":"var _jsxFileName = \"/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/src/components/MyPage/MyPage.jsx\",\n  _s = $RefreshSig$();\n/* TODO\r\n  1. [o] 닉네임 변경 기능 추가 \r\n  2. [o]리뷰많은 순 랭킹 조회\r\n  3. [o]평점순 랭킹 조회 */\n\nimport S from \"./styled\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport settingCookie from \"../../utils/settingCookie\";\nimport { useDispatch } from \"react-redux\";\nimport Logout from \"./Logout\";\nimport authClient from \"../../apis/authClient\";\nimport noAuthClient from \"../../apis/noAuthClient\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport logo from \"../../image/logo2.png\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyPage() {\n  _s();\n  // 리뷰순 랭킹\n  const [reviewRank, setReviewRank] = useState([]);\n  // 평점순 랭킹\n  const [scoreRank, setScoreRank] = useState([]);\n  // 로딩 상태를 관리하는 변수\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedData, setSelectedData] = useState(null);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userId = parseInt(localStorage.getItem(\"user-id\"));\n  const checkHistory = async e => {\n    e.preventDefault();\n    navigate(\"/history\");\n    try {\n      const res = await authClient({\n        method: \"get\",\n        url: \"/analyze\"\n      });\n      console.log(res);\n    } catch (error) {\n      if (error.response) {\n        const err = error.response.data;\n        console.log(err);\n      } else {\n        // 네트워크 에러 또는 클라이언트 에러\n        console.log(\"Error:\", error.message);\n      }\n    }\n\n    //   // 닉네임 조회\n    //   try {\n    //     const response = await authClient({\n    //       method: \"get\",\n    //       url: `/member`,\n    //     });\n    //     console.log(\"떵공\");\n    //     console.log(\"member api response:\", response);\n    //   } catch (error) {\n    //     if (error.response) {\n    //       const err = error.response.data;\n    //       console.log(err);\n    //     }\n    //   }\n  };\n\n  const changeNick = () => {\n    navigate(\"/nickChange\");\n  };\n  const userName = localStorage.getItem(\"nickname\");\n  const MyPageView = /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(S.Info, {\n      children: [/*#__PURE__*/_jsxDEV(S.LogoutButton, {\n        onClick: checkHistory,\n        children: \"\\uD788\\uC2A4\\uD1A0\\uB9AC \\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.LogoutButton, {\n        type: \"button\",\n        onClick: changeNick,\n        children: \"\\uB2C9\\uB124\\uC784 \\uBCC0\\uACBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(S.Form, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n  return MyPageView;\n}\n_s(MyPage, \"10LF1Y18e+Td3XF4S/875gE/bIQ=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["S","useEffect","useState","useNavigate","settingCookie","useDispatch","Logout","authClient","noAuthClient","CircularProgress","logo","useSelector","jsxDEV","_jsxDEV","MyPage","_s","reviewRank","setReviewRank","scoreRank","setScoreRank","isLoading","setIsLoading","selectedData","setSelectedData","navigate","dispatch","userId","parseInt","localStorage","getItem","checkHistory","e","preventDefault","res","method","url","console","log","error","response","err","data","message","changeNick","userName","MyPageView","Container","children","Info","LogoutButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","Wrapper","Form","src","_c","$RefreshReg$"],"sources":["/Users/Samsung/Desktop/BeJuRyu/2023_1_WAT_BeJuRyu/front/src/components/MyPage/MyPage.jsx"],"sourcesContent":["/* TODO\r\n  1. [o] 닉네임 변경 기능 추가 \r\n  2. [o]리뷰많은 순 랭킹 조회\r\n  3. [o]평점순 랭킹 조회 */\r\n\r\nimport S from \"./styled\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport settingCookie from \"../../utils/settingCookie\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Logout from \"./Logout\";\r\nimport authClient from \"../../apis/authClient\";\r\nimport noAuthClient from \"../../apis/noAuthClient\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport logo from \"../../image/logo2.png\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction MyPage() {\r\n  // 리뷰순 랭킹\r\n  const [reviewRank, setReviewRank] = useState([]);\r\n  // 평점순 랭킹\r\n  const [scoreRank, setScoreRank] = useState([]);\r\n  // 로딩 상태를 관리하는 변수\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedData, setSelectedData] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const userId = parseInt(localStorage.getItem(\"user-id\"));\r\n\r\n  const checkHistory = async (e) => {\r\n    e.preventDefault();\r\n    navigate(\"/history\");\r\n\r\n    try {\r\n      const res = await authClient({\r\n        method: \"get\",\r\n        url: \"/analyze\",\r\n      });\r\n      console.log(res);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        const err = error.response.data;\r\n        console.log(err);\r\n      } else {\r\n        // 네트워크 에러 또는 클라이언트 에러\r\n        console.log(\"Error:\", error.message);\r\n      }\r\n    }\r\n\r\n    //   // 닉네임 조회\r\n    //   try {\r\n    //     const response = await authClient({\r\n    //       method: \"get\",\r\n    //       url: `/member`,\r\n    //     });\r\n    //     console.log(\"떵공\");\r\n    //     console.log(\"member api response:\", response);\r\n    //   } catch (error) {\r\n    //     if (error.response) {\r\n    //       const err = error.response.data;\r\n    //       console.log(err);\r\n    //     }\r\n    //   }\r\n  };\r\n\r\n  const changeNick = () => {\r\n    navigate(\"/nickChange\");\r\n  };\r\n\r\n  const userName = localStorage.getItem(\"nickname\");\r\n\r\n  const MyPageView = (\r\n    <S.Container>\r\n      <S.Info>\r\n        <S.LogoutButton onClick={checkHistory}>히스토리 확인</S.LogoutButton>\r\n\r\n        <S.LogoutButton type=\"button\" onClick={changeNick}>\r\n          닉네임 변경\r\n        </S.LogoutButton>\r\n        <Logout />\r\n      </S.Info>\r\n      {/* 약관 추가 */}\r\n      <S.Wrapper>\r\n        <S.Form>\r\n          <img src={logo} />\r\n        </S.Form>\r\n      </S.Wrapper>\r\n    </S.Container>\r\n  );\r\n\r\n  return MyPageView;\r\n}\r\n\r\nexport default MyPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}